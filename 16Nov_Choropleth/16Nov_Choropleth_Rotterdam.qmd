---
title: "#30DMC_16Nov_Choropleth"
author: "Eugenio Muccio"
date: "2024-11-16"
format: 
  html: default
  pdf: default
---

## 16 November - Choropleth

"Classic choropleth map. Use color to show data variation across regions. This simple but effective technique is a staple for showing thematic differences."

### 1. Load packages

```{r}
library(tidyverse)
library(here)
library(sf)
library(ggplot2)
library(scales) 
library(gridExtra)
library(magick)
library(grid)
library(dplyr)
library(biscale) # For bivariate classification
library(patchwork)
library(sysfonts)
library(showtext)
library(jsonlite)
library(curl)
library(cowplot)


```

### 2. Import data & Rbanism logo

```{r}

woz_2023 <- read_sf(here('30_day_map/data', 'rotterdam_buurten_stats_2023.shp'))
listings_2023 <- read_sf(here('30_day_map/data', 'listings_12_2023_mean.shp'))

rbanism_logo <- image_read('https://rbanism.org/assets/imgs/about/vi_l.jpg')

```

### 3. Data processing

```{r}
# Replace -99997 values
woz_2023 <- woz_2023 %>%
  mutate(gemiddel_1 = ifelse(gemiddel_1 == -99997, NA, gemiddel_1))

# Align CRS
listings_2023 <- st_transform(listings_2023, st_crs(woz_2023))

# Check
st_crs(listings_2023)
st_crs(woz_2023)

# Attribute-based join
merged_data <- woz_2023 %>%
  left_join(st_drop_geometry(listings_2023), by = "buurtcode")

# Replace NA values with 0
merged_data <- merged_data %>%
  mutate(
    gemiddel_1 = ifelse(is.na(gemiddel_1), 0, gemiddel_1),
    price_n_me = ifelse(is.na(price_n_me), 0, price_n_me)
  )

# Bivariate classification
bivariate_class <- bi_class(
  merged_data,
  x = gemiddel_1,    
  y = price_n_me,   
  style = "quantile",
  dim = 3
)

```

### 3. Visualize

```{r}
# Custom theme
font_add_google("Roboto Mono", "roboto_mono") 
showtext_auto()

custom_theme <- theme_minimal(base_family = "roboto_mono") +
  theme(plot.title = element_text(family = "roboto_mono", size = 15, face = "bold",      hjust = 0.5),
    plot.subtitle = element_text(family = "roboto_mono", size = 11, hjust = 0.5),
    plot.caption = element_text(family = "roboto_mono", size = 9, hjust = 0.5),
    legend.text = element_text(family = "roboto_mono", size = 9, hjust = 0.5),
    legend.position = "none") # Remove default legend

# Create the bivariate map
bivariate_map <- ggplot() +
  geom_sf(data = bivariate_class, aes(fill = bi_class), color = "white", size = 0.1) +
  bi_scale_fill(pal = "DkBlue", dim = 3) +
  custom_theme +
  labs(
    title = "Day 16. Choropleth. \nThe Long-Term & Short-Term City",
    subtitle = "Average Market Value (WOZ) of Residential Property vs. \nAverage Daily Rate of Short-Term Rentals in Rotterdam, 2023",
    caption = "#30DayMapChallenge | Map by Eugenio Muccio, 2024 | Data: CBS, Inside Airbnb"
    )

# Create the bivariate legend
bivariate_legend <- bi_legend(
  pal = "DkBlue",
  dim = 3,
  xlab = "WOZ (Low → High)",
  ylab = "ADR (Low → High)",
  size = 20)


final_plot <- bivariate_map + 
  inset_element(bivariate_legend, left = 0.02, bottom = 0.02, right = 0.3, top = 0.2, align_to = "panel")  # Bottom-left legend

# Convert to a patchwork object
final_plot <- wrap_elements(panel = final_plot)

final_plot
# Insert legend and logo
grid.raster(rbanism_logo, x = 0.9, y=0.9, width = unit(100, "points"))

ggsave("choropleth_map.png", final_plot, width = 16, height = 9, units = "in", dpi = 300)

```
